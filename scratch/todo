todo
  [X] entities#show
  [X] include tags, people, and comments in entities/show.json
  [X] create stories
    [X] route to add entity to story

hierarchy
  user ("Me")
    relationships
    entities 
      tags
      comments
      relationships
    stories ("Stories")
      entities
        ...
      tags
      relationships

resulting routes/api
  / 
    /relationships
    /entities 
      /entities/:entity_id/comments
      /entities/:entity_id/tags
      /entities/:entity_id/relationships  {user_id: 123}
      (add to story)      PUT/PATCH  /entities/:entity_id  {entity:{story_id:123}}
      (remove from story) PUT/PATCH  /entities/:entity_id  {entity:{story_id:null}}
    /stories
      /stories/:story_id/entities
      /stories/:story_id/tags
      /stories/:story_id/relationships/:id
  /timeline
    /timeline/tag/:tag_name
    /timeline/stories
    /timeline/person/:person_id


api has routes to 
  timelines
    [\] show my timeline
      [X] entities
      [X] + pagination
      [ ] stories
    [\] show my timeline for a specific tag
      [X] entities
      [X] + pagination
      [ ] stories
    [ ] show my common timeline with a specific person
      [ ] entities
      [ ] + pagination
      [ ] stories
    [ ] show my timeline stories
      [ ] + pagination
  entities
    [X] create an entity
    [X] update an entity
    [X] destroy an entity
    add/remove a
      [X] tag
      [X] person
      [X] comment
        [X] update comment
    stories
      [X] create nested entity
      add/remove a
        [\] entity (better route?)
        [X] tag
        [X] person

    specs
      [X] story CRUD
      [X] story/entity CRUD
      [X] story tags CRUD
      [X] story people CRUD


Entity(title, note, date, time)[Todo, Asset, Message, Event]
  Tags
  Relationships
  Comments
  (Story)


pieces
  well-defined
    [\] authentication (email + oauth)
      [\] devise
      [ ] omniauth
    [ ] shell accounts (for invited users)
    [X] entities
    [\] stories -> optionally nest entities unders stories
    [X] tags, comments, relationships for entities
    [ ] subclassing entities
      [ ] todo
        [ ] ?
      [ ] message
        [ ] can use comments as messages (but alias out term "comments")
        [ ] ?
      [ ] event
        [ ] map
        [ ] ?
      [ ] asset
        [ ] file upload
        [ ] ?
    [ ] fetch entities/stories in common with another person
  later/undefined
    [ ] 3rd party api calls (e.g. grab facebook data)
    [ ] mailer
    [ ] profile
    [ ] unique slugs for entity ids? e.g. /entities/123/entity-title

todo
  [ ] subclass entities
    [ ] Asset
      [ ] paperclip
      [ ] s3
    [ ] Event
      [ ] gmaps
  [ ] refactor Story and EntityUser into Entity
    [ ] classes
      [ ] destroy EntityUser
      [ ] class Relationship < Entity
      [ ] destroy Story scaffold (keep controller?)
      [ ] class Story < Entity
    [ ] associations
      [ ] Entity acts_as_tree
      [ ] Entity .relationships/.people
  [ ] finish timelines (e.g. by tag, story only, by associated user)
  [ ] devise -> omniauthable
  [ ] shell accounts
  [ ] authorization
  misc
    [ ] authorization for adding entity to story
    [ ] includes :tags, :people, etc. for Entity/Story?
    [ ] rake rails:update (?)
    [ ] ensure no polymorphic models are used for joins
    [ ] validate tag names e.g. "all-lower-case-hyphen-separated"
    [ ] add object class to timeline json
    [ ] move "request" specs
    [ ] spec param filtering? (e.g. no foreign key or type setting)
    [ ] kaminari defaults in models? e.g. paginates_per and max_paginates_per 

api schedule
  week 1 (half week)
    [X] start rails 4 app
    [\] authentication
      [X] email (devise)
      [ ] oauth (omniauth)
        [ ] facebook
        [ ] linkedin
        [ ] google
    [ ] invited user shell accounts
  week 2
    [X] start entities
    [X] entities
      [X] tags
      [X] comments
    [\] timelines
      [X] full
      [\] by tag
    [X] entities
      [X] people (EntityUser)
    [\] stories
      [\] optionally nest entities
    [ ] timelines
      [ ] stories
      [ ] full to include stories
      [ ] by person
    [\] start basic authorization
      [\] permissions on entities where entity.people.include?(user)
      [ ] permissions on tags where entity.people.include?(user)
      [ ] permissions on relationships where entity.people.include?(user)
      [ ] permissions on comments where entity.people.include?(user)
  week 3
    [ ] start subclassing entities
      [ ] asset
        [ ] file upload (paperclip)
          [ ] set up example upload form for front-end
      [ ] event
        [ ] mappable
      [ ] todo
      [ ] message
